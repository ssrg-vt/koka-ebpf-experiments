// This file is generated by Cogent

#ifndef PACKET_SIZE_H__
#define PACKET_SIZE_H__

#include <cogent-defns.h>
#include <cogent-endianness.h>

enum {
    LET_TRUE = 1,
};
enum {
    LETBANG_TRUE = 1,
};
enum untyped_func_enum {
    FUN_ENUM_bpf_print_str,
    FUN_ENUM_bpf_print_u32,
    FUN_ENUM_bpf_print_u64,
    FUN_ENUM_run,
    FUN_ENUM_xdp_packet_size,
};
typedef enum untyped_func_enum untyped_func_enum;
typedef untyped_func_enum t2;
#define FUN_DISP_MACRO_dispatch_t2(a1, a2, a3)\
{\
    {\
        a1 = bpf_print_str(a3);\
    }\
}
typedef untyped_func_enum t3;
#define FUN_DISP_MACRO_dispatch_t3(a1, a2, a3)\
{\
    {\
        a1 = run(a3);\
    }\
}
typedef untyped_func_enum t4;
#define FUN_DISP_MACRO_dispatch_t4(a1, a2, a3)\
{\
    {\
        a1 = xdp_packet_size(a3);\
    }\
}
typedef untyped_func_enum t5;
#define FUN_DISP_MACRO_dispatch_t5(a1, a2, a3)\
{\
    {\
        a1 = bpf_print_u32(a3);\
    }\
}
typedef untyped_func_enum t6;
#define FUN_DISP_MACRO_dispatch_t6(a1, a2, a3)\
{\
    {\
        a1 = bpf_print_u64(a3);\
    }\
}
typedef struct t1 t1;
struct t1 {
    u64 data;
    u64 data_end;
};
static inline unit_t bpf_print_u64(u64);
static inline unit_t bpf_print_u32(u32);
static inline unit_t bpf_print_str(char *);
static inline u64 xdp_packet_size(t1 *);
static inline u32 run(t1 *);
static inline unit_t dispatch_t2(untyped_func_enum a2, char *a3)
{
    return bpf_print_str(a3);
}
static inline u32 dispatch_t3(untyped_func_enum a2, t1 *a3)
{
    return run(a3);
}
static inline u64 dispatch_t4(untyped_func_enum a2, t1 *a3)
{
    return xdp_packet_size(a3);
}
static inline unit_t dispatch_t5(untyped_func_enum a2, u32 a3)
{
    return bpf_print_u32(a3);
}
static inline unit_t dispatch_t6(untyped_func_enum a2, u64 a3)
{
    return bpf_print_u64(a3);
}
typedef u32 Xdp_Action;
typedef t1 Xdp_Packet;
typedef char *bpf_print_str_arg;
typedef unit_t bpf_print_str_ret;
typedef u32 bpf_print_u32_arg;
typedef unit_t bpf_print_u32_ret;
typedef u64 bpf_print_u64_arg;
typedef unit_t bpf_print_u64_ret;
typedef t1 *run_arg;
typedef u32 run_ret;
typedef t1 *xdp_packet_size_arg;
typedef u64 xdp_packet_size_ret;
#endif


